<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
        xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
	http://www.springframework.org/schema/jee
	http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-2.5.xsd
	        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
	"
       default-lazy-init="true">

    <context:component-scan base-package="com.ifunpay.portal"/>
    <mvc:annotation-driven/>

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:jdbc.properties</value>
            </list>
        </property>
    </bean>

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${jdbc.driverClassName}"/>
        <property name="jdbcUrl"
                  value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="minPoolSize" value="1"></property>
        <property name="maxPoolSize" value="100"></property>
        <property name="checkoutTimeout" value="6000"></property>
        <property name="maxIdleTime" value="25000"/>
        <property name="idleConnectionTestPeriod" value="600000"></property>
    </bean>


    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mappingLocations">
            <list>
                <value>classpath:/com/jspgou/core/entity/hbm/*.hbm.xml</value>
                <value>classpath:/com/jspgou/cms/entity/hbm/*.hbm.xml</value>
            </list>
        </property>
        <property name="packagesToScan">
            <list>
                <value>com.ifunpay.portal.entity</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <value>
                hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect
                hibernate.show_sql=true
                hibernate.format_sql=false
                hibernate.query.substitutions=true 1, false 0
                hibernate.jdbc.batch_size=20
                hibernate.cache.use_query_cache=false
                hibernate.cache.use_second_level_cache=false
                hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider
            </value>
        </property>
        <property name="entityInterceptor">
            <ref local="treeInterceptor"/>
        </property>
        <!--
        <property name="cacheProvider">
            <ref local="cacheProvider"/>
        </property>
        -->
        <property name="lobHandler">
            <ref bean="lobHandler"/>
        </property>
    </bean>


    <!--定时begin -->
    <bean id="executor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="10"/>
        <property name="maxPoolSize" value="100"/>
        <property name="queueCapacity" value="500"/>
    </bean>
    <bean id="smsJob" class="com.jspgou.cms.action.admin.SmsJob"/>
    <bean id="smsJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="smsJob"/>
        <property name="targetMethod" value="execute"/>
    </bean>
    <bean id="smsTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="smsJobDetail"/>
        <property name="cronExpression" value="0 0 2 * * ?"/>
        <!--每天两点执行 -->
    </bean>
    <bean id="taskTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
        <property name="jobDetail" ref="smsJobDetail"/>
        <property name="startDelay" value="10000"/>
        <property name="repeatInterval" value="60000"/>
    </bean>
    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="smsTrigger"/>
            </list>
        </property>
        <property name="taskExecutor" ref="executor"/>
    </bean>
    <!--定时end -->

    <bean id="lobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler" lazy-init="true"/>

    <bean id="cacheProvider" class="com.jspgou.common.hibernate3.SpringEhCacheProvider">
        <property name="configLocation">
            <value>classpath:ehcache-hibernate.xml</value>
        </property>
        <property name="diskStoreLocation">
            <value>/WEB-INF/cache/hibernate</value>
        </property>
    </bean>
    <bean id="treeInterceptor" class="com.jspgou.common.hibernate3.TreeIntercptor"/>
    <!-- 事务配置 -->
    <bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <!-- 使用annotation 自动注册bean,并检查@Required,@Autowired的属性已被注入
    <context:component-scan base-package="com.jspgou">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
     -->
    <context:annotation-config/>
    <!-- 使用annotation定义事务 -->
    <tx:annotation-driven transaction-manager="txManager"/>

    <import resource="classpath:interact.xml"/>


    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/mvc/login.xhtml"/>
        <property name="successUrl" value="/mvc/index.xhtml"/>
        <property name="filterChainDefinitions">
            <value>
                /mvc/mallszccb/pd/**/**/**/0/**/** = authc
                /mvc/docs/** = authc, perms[document:read]
                /currentUser = authc
                /** = anon
            </value>
        </property>
    </bean>
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="myRealm"/>
    </bean>
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <bean id="myRealm" class="com.ifunpay.portal.security.MemberUserRealm"/>


    <bean class="com.ifunpay.util.cache.BooleanCacheService"/>
    <bean class="com.ifunpay.util.cache.RedisCacheService">
        <property name="host" value="${redis.host}"/>
        <property name="port" value="${redis.port}"/>
        <property name="password" value="${redis.password}"/>
        <property name="db" value="${redis.db:0}"/>
    </bean>
    <bean class="com.ifunpay.util.mongo.MongoConfig" lazy-init="false">
        <property name="host" value="${mongo.host}"/>
        <property name="port" value="${mongo.port}"/>
        <property name="db" value="${mongo.db}"/>
        <property name="user" value="${mongo.user}"/>
        <property name="password" value="${mongo.password}"/>
        <property name="executorService" ref="threadPoolService"/>
    </bean>

    <bean class="com.ifunpay.util.email.EmailConfig" lazy-init="false">
        <property name="smtpServer" value="smtp.exmail.qq.com"/>
        <property name="username" value="service@ifunpay.com"/>
        <property name="password" value="mailpwd05"/>
        <property name="from" value="service@ifunpay.com"/>
    </bean>
</beans>